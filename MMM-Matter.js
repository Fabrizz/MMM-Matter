/*
  ┌────────────────────────────────────────────────────────────────┐
  │                    MMM-Matter by Fabrizz <3                    │
  │              https://github.com/Fabrizz/MMM-Matter             │
  │                        (c) Fabrizio Bap                        │
  │                                                                │
  ├─ Version 1.0.0 MIT License                                     │
  └────────────────────────────────────────────────────────────────┘
*/

// [⚠] This file is auto-generated. DO NOT EDIT.

(()=>{var a=class{constructor(){this.events={}}on(t,o){this.events[t]||(this.events[t]=[]),this.events[t].push(o)}emit(t,o){let n=this.events[t];n&&n.forEach(i=>{i(o)})}off(t,o){this.events[t]&&(this.events[t]=this.events[t].filter(n=>n!==o))}},s={debug(e,...t){console.debug(`%c\xB7 MMM-Matter %c %c DBUG %c ${e}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#293f45;color:white;","",...t)},info(e,...t){console.info(`%c\xB7 MMM-Matter %c %c INFO %c ${e}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#02675d;color:white;","",...t)},warninfo(e,...t){console.info(`%c\xB7 MMM-Matter %c %c WARN %c ${e}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#a98403;color:white;","",...t)},warn(e,...t){console.warn(`%c\xB7 MMM-Matter %c %c WARN %c ${e}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#a98403;color:white;","",...t)},error(e,...t){console.error(`%c\xB7 MMM-Matter %c %c ERRO %c ${e}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#781919;color:white;","",...t)},badge(){console.log(" \u2816 %c by Fabrizz %c MMM-Matter ","background-color: #555;color: #fff;margin: 0.4em 0em 0.4em 0.4em;padding: 5px 3px 5px 5px;border-radius: 7px 0 0 7px;font-family: DejaVu Sans,Verdana,Geneva,sans-serif;","background-color: #bc81e0;background-image: linear-gradient(90deg,rgb(187, 171, 32),rgb(250, 122, 18));color: #FFF;margin: 0.4em 0.4em 0.4em 0em;padding: 5px 5px 5px 3px;border-radius: 0 7px 7px 0;font-family: DejaVu Sans,Verdana,Geneva,sans-serif;text-shadow: 0 1px 0 rgba(1, 1, 1, 0.3)")}},r={MatterEventEmmiter:a,MatterLogger:s};var c="1.0.0";Module.register("MMM-Matter",{defaults:{matterLogLevel:"warn",matterLogFormat:"ansi"},getScripts(){return[]},getStyles(){return[]},getTranslations(){return{es:"translations/es.json",en:"translations/en.json"}},getDom:function(){let e=document.createElement("div");return e.id="MTTR-NOTIFICATIONS",e.append(document.createComment(`MMM-MTTR Version: ${this.VERSION}`),document.createComment("MMM-Matter by Fabrizz | https://github.com/Fabrizz/MMM-Matter")),e},start(){r.MatterLogger.badge(),this.VERSION=c||"",this.backendListensTo=new Set,this.sendSocketNotification("FRONTEND_READY",{matterLogFormat:this.config.matterLogFormat,matterLogLevel:this.config.matterLogLevel}),this.sendSocketNotification("FRONTEND_TRANSLATIONS",this.getTranslationsFromGlobal())},socketNotificationReceived:function(e,t){switch(e){case"CONTROL_MODULES":r.MatterLogger.debug("Received CONTROL_MODULES",t),this.sendNotification(t.tag,t.payload);break;case"REGISTER_NOTIFICATIONS":r.MatterLogger.info(this.translate("CONSOLE_LISTENTO"),t),t.forEach(o=>this.backendListensTo.add(o));break}},notificationReceived:function(e,t,o){switch(e){case"ALL_MODULES_STARTED":r.MatterLogger.info(`${this.translate("CONSOLE_USEWEB")} | ${new URL("/matter",window.location.href).href} \u2190`);break;case"MATTER_REGISTER_SUGGESTION":r.MatterLogger.debug("Received External Module Suggestion",t),this.sendSocketNotification("EXTERNAL_SUGGESTION",t);break}this.backendListensTo.has(e)&&(r.MatterLogger.debug("Notification received to be resent",{tag:e,payload:t,sender:o}),this.sendSocketNotification("EXTERNAL_CONTROL",{tag:e,payload:t,sender:o}))},getTranslationsFromGlobal:function(){let e={};try{e=globalThis.Translator.translations["MMM-Matter"]}catch(t){r.MatterLogger.error(this.translate("TRANSLATOR_GLOBALERROR"),t)}return e}});})();
//# sourceMappingURL=data:application/json;base64,
