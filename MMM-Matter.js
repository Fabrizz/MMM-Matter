/*
  ┌────────────────────────────────────────────────────────────────┐
  │                    MMM-Matter by Fabrizz <3                    │
  │              https://github.com/Fabrizz/MMM-Matter             │
  │                        (c) Fabrizio Bap                        │
  │                                                                │
  ├─ Version 1.0.0 MIT License                                     │
  └────────────────────────────────────────────────────────────────┘
*/

// [⚠] This file is auto-generated. DO NOT EDIT.

(()=>{var a=class{constructor(){this.events={}}on(t,e){this.events[t]||(this.events[t]=[]),this.events[t].push(e)}emit(t,e){let n=this.events[t];n&&n.forEach(i=>{i(e)})}off(t,e){this.events[t]&&(this.events[t]=this.events[t].filter(n=>n!==e))}},s={debug(o,...t){console.debug(`%c\xB7 MMM-Matter %c %c DBUG %c ${o}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#293f45;color:white;","",...t)},info(o,...t){console.info(`%c\xB7 MMM-Matter %c %c INFO %c ${o}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#02675d;color:white;","",...t)},warninfo(o,...t){console.info(`%c\xB7 MMM-Matter %c %c WARN %c ${o}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#a98403;color:white;","",...t)},warn(o,...t){console.warn(`%c\xB7 MMM-Matter %c %c WARN %c ${o}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#a98403;color:white;","",...t)},error(o,...t){console.error(`%c\xB7 MMM-Matter %c %c ERRO %c ${o}`,"background-color:#FFE780;color:black;border-radius:0.5em","","background-color:#781919;color:white;","",...t)},badge(){console.log(" \u2816 %c by Fabrizz %c MMM-Matter ","background-color: #555;color: #fff;margin: 0.4em 0em 0.4em 0.4em;padding: 5px 3px 5px 5px;border-radius: 7px 0 0 7px;font-family: DejaVu Sans,Verdana,Geneva,sans-serif;","background-color: #bc81e0;background-image: linear-gradient(90deg,rgb(187, 171, 32),rgb(250, 122, 18));color: #FFF;margin: 0.4em 0.4em 0.4em 0em;padding: 5px 5px 5px 3px;border-radius: 0 7px 7px 0;font-family: DejaVu Sans,Verdana,Geneva,sans-serif;text-shadow: 0 1px 0 rgba(1, 1, 1, 0.3)")}},r={MatterEventEmmiter:a,MatterLogger:s};var c="1.0.0";Module.register("MMM-Matter",{defaults:{matterLogLevel:"warn",matterLogFormat:"ansi"},getScripts(){return[]},getStyles(){return[]},getTranslations(){return{es:"translations/es.json",en:"translations/en.json"}},getDom:function(){let o=document.createElement("div");return o.id="MTTR-NOTIFICATIONS",o.append(document.createComment(`MMM-MTTR Version: ${this.VERSION}`),document.createComment("MMM-Matter by Fabrizz | https://github.com/Fabrizz/MMM-Matter")),o},start(){r.MatterLogger.badge(),this.VERSION=c||"",this.backendListensTo=new Set,this.translations={},this.sendSocketNotification("FRONTEND_READY",{matterLogFormat:this.config.matterLogFormat,matterLogLevel:this.config.matterLogLevel})},socketNotificationReceived:function(o,t){switch(o){case"CONTROL_MODULES":r.MatterLogger.debug("Received CONTROL_MODULES",t),this.sendNotification(t.tag,t.payload);break;case"REGISTER_NOTIFICATIONS":r.MatterLogger.info(this.translate("CONSOLE_LISTENTO"),t),t.forEach(e=>this.backendListensTo.add(e));break}},notificationReceived:function(o,t,e){switch(o){case"ALL_MODULES_STARTED":r.MatterLogger.info(`${this.translate("CONSOLE_USEWEB")} | ${new URL("/matter",window.location.href).href} \u2190`),this.sendSocketNotification("FRONTEND_TRANSLATIONS",this.getTranslationsFromGlobal());break}this.backendListensTo.has(o)&&(r.MatterLogger.debug("Notification received to be resent",{tag:o,payload:t,sender:e}),this.sendSocketNotification("NOTIFICATION_FORBACKEND",{tag:o,payload:t,sender:e}))},getTranslationsFromGlobal:function(){let o={};try{o=globalThis.Translator.translations["MMM-Matter"]}catch(t){r.MatterLogger.error(this.translate("TRANSLATOR_GLOBALERROR"),t)}return o}});})();
//# sourceMappingURL=data:application/json;base64,
